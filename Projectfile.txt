Docker-compose file
services:
  mysql-workbench:
    image: lscr.io/linuxserver/mysql-workbench:latest
    container_name: mysql-workbench
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /path/to/config:/config
    ports:
      - 3000:3000
      - 3001:3001
    cap_add:
      - IPC_LOCK
    restart: unless-stopped

Dockerfile.
FROM mysql:latest
ENV MYSQL_DATABASE=project_medical_data_history \
    MYSQL_ROOT_PASSWORD=DM!$!Team!47@4!23 \
    MYSQL_USER=dm_team4 \
    MYSQL_PASSWORD=DM!$!Team!47@4!23&
EXPOSE 3306
CMD ["mysqld"]
]


Medical Data History Project Report
                        SQL Queries
use project_medical_data_history;
show tables;
select * from admissions;
select * from doctors;
select *from patients;
select * from province_names;
1) Show first name, last name, and gender of patients whose gender is 'M' using where condition
select first_name, last_name ,gender from patients where gender= 'M';

2) Show first name and last name of patients who do not have allergies using is null 
select first_name, last_name, allergies from patients where allergies IS NULL;

3) Show first name of patients that start with the letter 'C' USING WILDCARD Characters.
select * from patients where first_name LIKE 'C%';

4) Show first name and last name of patients that weight within the range of 100 to 120 (inclusive).
select first_name, last_name , weight from patients where weight between 100 And 120;

5) Update the patient's table for the allergies column. If the patient's allergies are null then replace it with 'NKA'.
update patients set allergies = 'NKA' where allergies = Null;

6) Show first name and last name concatenated into one column to show their full name.
SELECT  CONCAT(first_name,' ',last_name) AS FullName , first_name, last_name FROM patients;

7) Show first name, last name, and the full province name of each patient.
SELECT patients.first_name, patients.last_name, province_names.province_name
Form patients JOIN province_names ON patients.province_id = province_names.province_id;

8)  Show how many patients have a birth date with 2010 as the birth year.
select first_name, last_name , birth_date from patients where YEAR(birth_date) = '2010';

9)  Show the first_name, last_name, and height of the patient with the greatest height.
select max(height) AS max_height from patients  order by height DESC ;
SELECT first_name, last_name, height FROM patients ORDER BY height DESC LIMIT 10;

10) Show all columns for patients who have one of the following patient_ids:1,45,534,879,1000
select * from patients where patient_id ='1' or patient_id='45' or 
patient_id= '534' or patient_id='879' or patient_id= '1000';
11. Show the total number of admissions
select count(*) as total_admissions from admissions;

12.Show all the columns from admissions where the patient was admitted
and discharged on the same day.
select * from admissions where date(admission_date)=date(discharge_date);

13.Show the total number of admissions for patient_id 579.
select count(*)as total_admission from admissions where patient_id=579;

14.Based on the cities that our patients live in, show unique cities that are in
province_id 'NS'?
select distinct(city) as patient_live from patients where province_id='NS';

15 Write a query to find the first_name, last name and birth date of patients
who have height more than 160 and weight more than 70
select first_name,last_name,birth_date from patients where height>160 and height>70;

16 Show unique birth years from patients and order them by ascending.
select distinct(birth_date) as Unique_birthyear from patients order by birth_date ;

17. Show unique first names from the patients table which only occurs once in
the list.For example, if two or more people are named 'John' in the first_name column
then don't include their name in the output list. If only 1 person is named 'Leo'
then include them in the output. Tip: HAVING clause was added to SQL
because the WHERE keyword cannot be used with aggregate functions.
select first_name as Unique_fname from patients group by first_name having count(*)=1; 

18. Show patient_id and first_name from patients where their first_name starts
and ends with 's' and is at least 6 characters long.
select first_name,patient_id from patients where first_name like 's%s' and length(first_name>=6);

19. Show patient_id, first_name, last_name from patients whose diagnosis is 'Dementia'. Primary diagnosis is stored in the admissions table.
select p.patient_id,p.first_name,p.last_name from patients as p join
admissions as a on p.patient_id=a.patient_id where a.diagnosis='Dementia';

20. Display every patient's first_name. Order the list by the length of each
name and then by alphabetically.
select first_name from patients order by length(first_name),first_name;

21)  Show the total number of male patients and the total number of female patients in the patients table. Display the two results in the same row.
SELECT SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS male_patients,
SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS female_patients FROM patients;

23) Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.
SELECT patient_id, diagnosis
FROM admissions
GROUP BY patient_id, diagnosis
HAVING COUNT(patient_id) >1;
SELECT patient_id, diagnosis
FROM admissions
GROUP BY patient_id, diagnosis
HAVING COUNT( diagnosis) >1;

24) Show the city and the total number of patients in the city. Order from most to least patients and then by city name ascending.
SELECT city, COUNT(patient_id) AS total_patients FROM patients GROUP BY city ORDER BY COUNT(patient_id) DESC, city ASC;

25) Show first name, last name and role of every person that is either patient or doctor. The roles are either "Patient" or "Doctor".
select first_name, last_name , 'patient' as role from patients union select  first_name, last_name , 'Doctor' as role from doctors;


26)Show all allergies ordered by popularity. Remove NULL values from the query.
SELECT allergies, COUNT(*) AS total_diagnosis FROM patients WHERE allergies IS NOT NULL GROUP BY allergies ORDER BY total_diagnosis DESC;
27) Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.
SELECT first_name, last_name, birth_date FROM patients WHERE birth_date BETWEEN '1970-01-01' AND '1979-12-31' ORDER BY birth_date;

28) We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, then first_name in all lowercase letters.Separate the last_name and first_name with a comma. Order the list by the first_name in descending order.
SELECT CONCAT(UPPER(last_name), ', ', LOWER(first_name)) AS full_name FROM patients ORDER BY first_name DESC;

29) Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000.
SELECT province_id, SUM(height) AS total_height FROM patients GROUP BY province_id HAVING SUM(height) >= 7000;

30) Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni'.
SELECT MAX(weight) - MIN(weight) AS weight_diff FROM patients WHERE last_name = 'Maroni';

31. Show all of the days of the month (1-31) and how many admission_dates occurred on that day. Sort by the day with most admissions to least  admissions.
select day(admission_date) as day_of_month,count(*) as admission_count from 
admissions group by day(admission_date) order by admission_count desc;

32. Show all of the patients grouped into weight groups. Show the total number of patients in each weight group. Order the list by the weight group descending. e.g. if they weigh 100 to 109 they are placed in the 100 weight group, 110-119 = 110 weight group, etc.
select case when weight between 100 and 109 then '100 weight'
when weight between 110 and 119 then '110 weight'
else 'Other weight group' end as weight_group, count(*) as patient_count from patients
group by  case when weight between 100 and 109 then '100 weight'
when weight between 110 and 119 then '110 weight'
else 'Other weight group' end order by weight_group desc;

33.Show patient_id, weight, height, isObese from the patients table. Display isObese as a boolean 0 or 1. Obese is defined as weight(kg)/(height(m). Weight is in units kg. Height is in units cm.
select patient_id,weight,height ,
case
   when weight/(height/100 *height/100)>=30 then 1 
  else 0 
end as isobese
from patients;

34. Show patient_id, first_name, last_name, and attending doctor's specialty. Show only the patients who has a diagnosis as 'Epilepsy' and the doctor's first name is 'Lisa'. Check patients, admissions, and doctors tables for required information.
select p.patient_id,p.first_name,p.last_name,d.specialty from patients p
join admissions a on p.patient_id =a.patient_id 
join doctors d on a.attending_doctor_id =d.doctor_id
where a.diagnosis='Epilepsy'
and d.first_name ='Lisa

35. All patients who have gone through admissions, can see their medical
documents on our site. Those patients are given a temporary password after their first admission. Show the patient_id and temp_password.

select patients.patient_id, concat(patients.patient_id, lengthpatients.last_name), year(patients.birth_date)) AS temp_password
from  patients join admissions ON patients.patient_id = admissions.patient_id group by 
patients.patient_id;






